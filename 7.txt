输入一个整数数组，实现一个函数来调整该数组中数字的顺序，
使得所有的奇数位于数组的前半部分，所有的偶数位于位于数
组的后半部分，并保证奇数和奇数，偶数和偶数之间的相对位置不变

从前向后遍历，找到第一个偶数，在从找到的偶数处向后遍历找到
第一个奇数，保存当前奇数，依次向后移动，（不能交换题目要求
奇数和奇数偶数和偶数的相对位置不变），用保存的数填补空位
跳出循环，继续下一个数
class Solution {
public:
    void reOrderArray(vector<int> &array) {
        if(&array==NULL)
            return ;
        int n=array.size();
        for(int i=0;i<n;i++)
        {
            if(array[i]%2==0)
                for(int j=i+1;j<n;j++)
                {
                    if(array[j]%2!=0)
                    { 
                        int tmp=array[j];
                        while(j>i)
                        {
                            array[j]=array[j-1];
                            j--;

                        }  
                        array[i]=tmp; 
                        break;
                    }
                }
        }

    }

};

